{
  "errors": [],
  "warnings": [],
  "version": "1.13.2",
  "hash": "da2b870e62e9ade5f76f",
  "publicPath": "",
  "assetsByChunkName": {
    "hello-properties.bundle": [
      "hello-properties.bundle.js",
      "hello-properties.bundle.js.map"
    ]
  },
  "assets": [
    {
      "name": "hello-properties.bundle.js",
      "size": 24171,
      "chunks": [
        0
      ],
      "chunkNames": [
        "hello-properties.bundle"
      ]
    },
    {
      "name": "hello-properties.bundle.js.map",
      "size": 33754,
      "chunks": [
        0
      ],
      "chunkNames": [
        "hello-properties.bundle"
      ]
    }
  ],
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "extraAsync": false,
      "size": 21708,
      "names": [
        "hello-properties.bundle"
      ],
      "files": [
        "hello-properties.bundle.js",
        "hello-properties.bundle.js.map"
      ],
      "hash": "7521799b846feae0836c",
      "parents": [],
      "origins": [
        {
          "moduleId": 0,
          "module": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
          "moduleName": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "loc": "",
          "name": "hello-properties.bundle",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
      "name": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
      "index": 0,
      "index2": 7,
      "size": 9372,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": null,
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [],
      "source": "\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar sp_client_preview_1 = require('@microsoft/sp-client-preview');\nvar HelloProperties_module_scss_1 = require('./HelloProperties.module.scss');\nvar strings = require('helloPropertiesStrings');\nvar HelloPropertiesWebPart = (function (_super) {\n    __extends(HelloPropertiesWebPart, _super);\n    function HelloPropertiesWebPart(context) {\n        _super.call(this, context);\n    }\n    HelloPropertiesWebPart.prototype.render = function () {\n        this.domElement.innerHTML = \"\\n      <div class=\\\"\" + HelloProperties_module_scss_1.default.helloProperties + \"\\\">\\n        <div class=\\\"\" + HelloProperties_module_scss_1.default.container + \"\\\">\\n          <div class=\\\"ms-Grid-row ms-bgColor-themeDark ms-fontColor-white \" + HelloProperties_module_scss_1.default.row + \"\\\">\\n            <div class=\\\"ms-Grid-col ms-u-lg10 ms-u-xl8 ms-u-xlPush2 ms-u-lgPush1\\\">\\n              <span class=\\\"ms-font-xl ms-fontColor-white\\\">Properties!</span>\\n              <p class=\\\"ms-font-l ms-fontColor-white\\\">Use this web part to investigate properties</p>\\n                <div class=\\\"ms-Grid\\\">\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Single Line of Text\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.myTextProperty + \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Checkbox\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.myCheckboxProperty + \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Read-Only Label\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.myLabelProperty + \"\\n                            </div>\\n                        </div>\\n                    </div\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Hyperlink\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.myLinkProperty + \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Slider\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.mySliderProperty + \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Toggle\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.myToggleProperty + \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"ms-Grid-row\\\">\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6\\\">\\n                            <div class=\\\"ms-font-m ms-fontWeight-semibold ms-fontColor-white\\\">\\n                                Drop-down list\\n                            </div>\\n                        </div>\\n                        <div class=\\\"ms-Grid-col ms-u-sm6 ms-u-md6 ms-u-lg6 ms-fontColor-white\\\">\\n                            <div class=\\\"ms-font-m\\\">\\n                                \" + this.properties.myDropdownProperty + \"\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\";\n    };\n    Object.defineProperty(HelloPropertiesWebPart.prototype, \"propertyPaneSettings\", {\n        get: function () {\n            return {\n                pages: [\n                    {\n                        header: {\n                            description: strings.PropertyPaneDescription\n                        },\n                        groups: [\n                            {\n                                groupName: strings.BasicGroupName,\n                                groupFields: [\n                                    sp_client_preview_1.PropertyPaneTextField('myTextProperty', {\n                                        label: strings.TextFieldLabel\n                                    }),\n                                    sp_client_preview_1.PropertyPaneCheckbox('myCheckboxProperty', {\n                                        text: strings.CheckboxFieldLabel\n                                    }),\n                                    sp_client_preview_1.PropertyPaneLabel('myLabelProperty', {\n                                        text: strings.LabelFieldLabel\n                                    })\n                                ]\n                            },\n                            {\n                                groupName: strings.AdvancedGroupName,\n                                groupFields: [\n                                    sp_client_preview_1.PropertyPaneLink('myLinkProperty', {\n                                        text: strings.LinkFieldText,\n                                        href: strings.LinkFieldUrl\n                                    }),\n                                    sp_client_preview_1.PropertyPaneSlider('mySliderProperty', {\n                                        label: strings.SliderFieldLabel,\n                                        step: 1,\n                                        min: 1,\n                                        max: 10\n                                    }),\n                                    sp_client_preview_1.PropertyPaneToggle('myToggleProperty', {\n                                        label: strings.ToggleFieldLabel,\n                                        onText: \"On!\",\n                                        offText: \"Off!\"\n                                    }),\n                                    sp_client_preview_1.PropertyPaneDropdown('myDropdownProperty', {\n                                        label: strings.DropdownFieldLabel,\n                                        options: [\n                                            { key: '1', text: 'One' },\n                                            { key: '2', text: 'Two' },\n                                            { key: '3', text: 'Three' },\n                                            { key: '4', text: 'Four' }\n                                        ]\n                                    })\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HelloPropertiesWebPart;\n}(sp_client_preview_1.BaseClientSideWebPart));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = HelloPropertiesWebPart;\n\n"
    },
    {
      "id": 1,
      "identifier": "external \"@microsoft/sp-client-preview\"",
      "name": "external \"@microsoft/sp-client-preview\"",
      "index": 1,
      "index2": 0,
      "size": 42,
      "cacheable": false,
      "built": false,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
          "module": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "moduleName": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "type": "cjs require",
          "userRequest": "@microsoft/sp-client-preview",
          "loc": "7:26-65"
        }
      ]
    },
    {
      "id": 2,
      "identifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.scss.js",
      "name": "./lib/webparts/helloProperties/HelloProperties.module.scss.js",
      "index": 2,
      "index2": 5,
      "size": 379,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
          "module": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "moduleName": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "type": "cjs require",
          "userRequest": "./HelloProperties.module.scss",
          "loc": "8:36-76"
        }
      ],
      "source": "\"use strict\";\nrequire('HelloProperties.module.css');\n/* tslint:disable */\nvar styles = {\n    helloProperties: 'helloProperties_801c49a5',\n    container: 'container_ade886df',\n    row: 'row_6cf85d34',\n    listItem: 'listItem_61d7fecb',\n    button: 'button_2c30e570',\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = styles;\n/* tslint:enable */\n\n"
    },
    {
      "id": 3,
      "identifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\loader-load-themed-styles\\lib\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
      "name": "./lib/webparts/helloProperties/HelloProperties.module.css",
      "index": 3,
      "index2": 4,
      "size": 448,
      "cacheable": false,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.scss.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.scss.js",
          "module": "./lib/webparts/helloProperties/HelloProperties.module.scss.js",
          "moduleName": "./lib/webparts/helloProperties/HelloProperties.module.scss.js",
          "type": "cjs require",
          "userRequest": "HelloProperties.module.css",
          "loc": "2:0-37"
        }
      ],
      "source": "var content = require(\"!!./../../../node_modules/css-loader/index.js!./HelloProperties.module.css\");\nvar loader = require(\"D:\\\\Demos\\\\_Workshop\\\\SPFxProperties\\\\node_modules\\\\@microsoft\\\\load-themed-styles\\\\lib\\\\index.js\");\n\nif(typeof content === \"string\") content = [[module.id, content]];\n\n// add the styles to the DOM\nfor (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1]);\n\nif(content.locals) module.exports = content.locals;"
    },
    {
      "id": 4,
      "identifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
      "name": "./~/css-loader!./lib/webparts/helloProperties/HelloProperties.module.css",
      "index": 4,
      "index2": 2,
      "size": 573,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\loader-load-themed-styles\\lib\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\loader-load-themed-styles\\lib\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
          "module": "./lib/webparts/helloProperties/HelloProperties.module.css",
          "moduleName": "./lib/webparts/helloProperties/HelloProperties.module.css",
          "type": "cjs require",
          "userRequest": "!!./../../../node_modules/css-loader/index.js!./HelloProperties.module.css",
          "loc": "1:14-99"
        }
      ],
      "source": "exports = module.exports = require(\"./../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".helloProperties_801c49a5 .container_ade886df{max-width:700px;margin:0 auto;box-shadow:0 2px 4px 0 rgba(0,0,0,.2),0 25px 50px 0 rgba(0,0,0,.1)}.helloProperties_801c49a5 .row_6cf85d34{padding:20px}.helloProperties_801c49a5 .listItem_61d7fecb{max-width:715px;margin:5px auto 5px auto;box-shadow:0 0 4px 0 rgba(0,0,0,.2),0 25px 50px 0 rgba(0,0,0,.1)}.helloProperties_801c49a5 .button_2c30e570{text-decoration:none}\", \"\"]);\n\n// exports\n"
    },
    {
      "id": 5,
      "identifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\lib\\css-base.js",
      "name": "./~/css-loader/lib/css-base.js",
      "index": 5,
      "index2": 1,
      "size": 1506,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
          "module": "./~/css-loader!./lib/webparts/helloProperties/HelloProperties.module.css",
          "moduleName": "./~/css-loader!./lib/webparts/helloProperties/HelloProperties.module.css",
          "type": "cjs require",
          "userRequest": "./../../../node_modules/css-loader/lib/css-base.js",
          "loc": "1:27-88"
        }
      ],
      "source": "/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n"
    },
    {
      "id": 6,
      "identifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\load-themed-styles\\lib\\index.js",
      "name": "./~/@microsoft/load-themed-styles/lib/index.js",
      "index": 6,
      "index2": 3,
      "size": 9346,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\loader-load-themed-styles\\lib\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\loader-load-themed-styles\\lib\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\css-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloProperties.module.css",
          "module": "./lib/webparts/helloProperties/HelloProperties.module.css",
          "moduleName": "./lib/webparts/helloProperties/HelloProperties.module.css",
          "type": "cjs require",
          "userRequest": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\@microsoft\\load-themed-styles\\lib\\index.js",
          "loc": "2:13-121"
        }
      ],
      "source": "/**\n * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value\n * to use if that slot is not specified by the theme.\n */\n\"use strict\";\n// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this\n// value will initialize as undefined, and later will be set once on first loadStyles injection.\nvar _injectStylesWithCssText;\n// Store the theming state in __themeState__ global scope for reuse in the case of duplicate\n// load-themed-styles hosted on the page.\nvar _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any\nvar _themeState = _root.__themeState__ = _root.__themeState__ || {\n    theme: undefined,\n    lastStyleElement: undefined,\n    registeredStyles: []\n};\n/**\n * Matches theming tokens. For example, \"[theme: themeSlotName, default: #FFF]\" (including the quotes).\n */\n/* tslint:disable: max-line-length */\nvar _themeTokenRegex = /[\\'\\\"]\\[theme:\\s*(\\w+)\\s*(?:\\,\\s*default:\\s*([\\\\\"\\']?[\\.\\,\\(\\)\\#\\-\\s\\w]*[\\.\\,\\(\\)\\#\\-\\w][\\\"\\']?))?\\s*\\][\\'\\\"]/g;\n/* tslint:enable: max-line-length */\n/** Maximum style text length, for supporting IE style restrictions. */\nvar MAX_STYLE_CONTENT_SIZE = 10000;\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load\n * event is fired.\n * @param {string | ThemableArray} styles Themable style text to register.\n */\nfunction loadStyles(styles) {\n    var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);\n    if (_injectStylesWithCssText === undefined) {\n        _injectStylesWithCssText = shouldUseCssText();\n    }\n    applyThemableStyles(styleParts);\n}\nexports.loadStyles = loadStyles;\n/**\n * Allows for customizable loadStyles logic. e.g. for server side rendering application\n * @param {(styles: string) => void} a loadStyles callback that gets called when styles are loaded or reloaded\n */\nfunction configureLoadStyles(callback) {\n    _themeState.loadStyles = callback;\n}\nexports.configureLoadStyles = configureLoadStyles;\n/**\n * Loads a set of style text. If it is registered too early, we will register it when the window.load event\n * is fired.\n * @param {string} styleText Style to register.\n * @param {IStyleRecord} styleRecord Existing style record to re-apply.\n */\nfunction applyThemableStyles(stylesArray, styleRecord) {\n    if (_themeState.loadStyles) {\n        var styles = resolveThemableArray(stylesArray);\n        _themeState.loadStyles(styles);\n    }\n    else {\n        _injectStylesWithCssText ?\n            registerStylesIE(stylesArray, styleRecord) :\n            registerStyles(stylesArray, styleRecord);\n    }\n}\n/**\n * Registers a set theme tokens to find and replace. If styles were already registered, they will be\n * replaced.\n * @param {theme} theme JSON object of theme tokens to values.\n */\nfunction loadTheme(theme) {\n    _themeState.theme = theme;\n    // reload styles.\n    reloadStyles();\n}\nexports.loadTheme = loadTheme;\n/**\n * Reloads styles.\n */\nfunction reloadStyles() {\n    if (_themeState.theme) {\n        for (var _i = 0, _a = _themeState.registeredStyles; _i < _a.length; _i++) {\n            var styleRecord = _a[_i];\n            applyThemableStyles(styleRecord.themableStyle, styleRecord);\n        }\n    }\n}\n/**\n * Find theme tokens and replaces them with provided theme values.\n * @param {string} styles Tokenized styles to fix.\n */\nfunction detokenize(styles) {\n    if (styles) {\n        styles = resolveThemableArray(splitStyles(styles));\n    }\n    return styles;\n}\nexports.detokenize = detokenize;\n/**\n * Resolves ThemingInstruction objects in an array and joins the result into a string.\n * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.\n */\nfunction resolveThemableArray(splitStyleArray) {\n    var theme = _themeState.theme;\n    var resolvedCss;\n    if (splitStyleArray) {\n        // Resolve the array of theming instructions to an array of strings.\n        // Then join the array to produce the final CSS string.\n        var resolvedArray = splitStyleArray.map(function (currentValue) {\n            var themeSlot = currentValue.theme;\n            if (themeSlot) {\n                // A theming annotation. Resolve it.\n                var themedValue = theme ? theme[themeSlot] : undefined;\n                var defaultValue = currentValue.defaultValue;\n                // Warn to console if we hit an unthemed value even when themes are provided.\n                // Allow the themedValue to be undefined to explicitly request the default value.\n                if (theme && !themedValue && console && !(themeSlot in theme)) {\n                    /* tslint:disable: max-line-length */\n                    console.warn(\"Theming value not provided for \\\"\" + themeSlot + \"\\\". Falling back to \\\"\" + (defaultValue || 'inherit') + \"\\\".\");\n                }\n                return themedValue || defaultValue || 'inherit';\n            }\n            else {\n                // A non-themable string. Preserve it.\n                return currentValue.rawString;\n            }\n        });\n        resolvedCss = resolvedArray.join('');\n    }\n    return resolvedCss;\n}\n/**\n * Split tokenized CSS into an array of strings and theme specification objects\n * @param {string} styles Tokenized styles to split.\n */\nfunction splitStyles(styles) {\n    var result = [];\n    if (styles) {\n        var pos = 0; // Current position in styles.\n        var tokenMatch = void 0;\n        while (tokenMatch = _themeTokenRegex.exec(styles)) {\n            var matchIndex = tokenMatch.index;\n            if (matchIndex > pos) {\n                result.push({\n                    rawString: styles.substring(pos, matchIndex)\n                });\n            }\n            result.push({\n                theme: tokenMatch[1],\n                defaultValue: tokenMatch[2] // May be undefined\n            });\n            // index of the first character after the current match\n            pos = _themeTokenRegex.lastIndex;\n        }\n        // Push the rest of the string after the last match.\n        result.push({\n            rawString: styles.substring(pos)\n        });\n    }\n    return result;\n}\nexports.splitStyles = splitStyles;\n/**\n * Registers a set of style text. If it is registered too early, we will register it when the\n * window.load event is fired.\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\n */\nfunction registerStyles(styleArray, styleRecord) {\n    var head = document.getElementsByTagName('head')[0];\n    var styleElement = document.createElement('style');\n    styleElement.type = 'text/css';\n    styleElement.appendChild(document.createTextNode(resolveThemableArray(styleArray)));\n    if (styleRecord) {\n        head.replaceChild(styleElement, styleRecord.styleElement);\n        styleRecord.styleElement = styleElement;\n    }\n    else {\n        head.appendChild(styleElement);\n    }\n    if (!styleRecord) {\n        _themeState.registeredStyles.push({\n            styleElement: styleElement,\n            themableStyle: styleArray\n        });\n    }\n}\n/**\n * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need\n * to register slightly differently.\n * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.\n * @param {IStyleRecord} styleRecord May specify a style Element to update.\n */\nfunction registerStylesIE(styleArray, styleRecord) {\n    var head = document.getElementsByTagName('head')[0];\n    var lastStyleElement = _themeState.lastStyleElement, registeredStyles = _themeState.registeredStyles;\n    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;\n    var lastStyleContent = stylesheet ? stylesheet.cssText : '';\n    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];\n    var resolvedStyleText = resolveThemableArray(styleArray);\n    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {\n        lastStyleElement = document.createElement('style');\n        lastStyleElement.type = 'text/css';\n        if (styleRecord) {\n            head.replaceChild(lastStyleElement, styleRecord.styleElement);\n            styleRecord.styleElement = lastStyleElement;\n        }\n        else {\n            head.appendChild(lastStyleElement);\n        }\n        if (!styleRecord) {\n            lastRegisteredStyle = {\n                styleElement: lastStyleElement,\n                themableStyle: styleArray\n            };\n            registeredStyles.push(lastRegisteredStyle);\n        }\n    }\n    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);\n    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place\n    // Preserve the theme state.\n    _themeState.lastStyleElement = lastStyleElement;\n}\n/**\n * Checks to see if styleSheet exists as a property off of a style element.\n * This will determine if style registration should be done via cssText (<= IE9) or not\n */\nfunction shouldUseCssText() {\n    var useCSSText = false;\n    if (typeof document !== 'undefined') {\n        var emptyStyle = document.createElement('style');\n        emptyStyle.type = 'text/css';\n        useCSSText = !!emptyStyle.styleSheet;\n    }\n    return useCSSText;\n}\n\n"
    },
    {
      "id": 7,
      "identifier": "external \"helloPropertiesStrings\"",
      "name": "external \"helloPropertiesStrings\"",
      "index": 7,
      "index2": 6,
      "size": 42,
      "cacheable": false,
      "built": false,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "assets": [],
      "issuer": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "D:\\Demos\\_Workshop\\SPFxProperties\\node_modules\\source-map-loader\\index.js!D:\\Demos\\_Workshop\\SPFxProperties\\lib\\webparts\\helloProperties\\HelloPropertiesWebPart.js",
          "module": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "moduleName": "./lib/webparts/helloProperties/HelloPropertiesWebPart.js",
          "type": "cjs require",
          "userRequest": "helloPropertiesStrings",
          "loc": "9:14-47"
        }
      ]
    }
  ],
  "filteredModules": 0,
  "children": []
}