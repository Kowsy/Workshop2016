{"version":3,"sources":["webparts/spFxSharePoint/app.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAElD,6BAA4B,gBAAgB,CAAC,CAAA;AAU7C;IAOI,sBACgC,OAAwB,EACpD,EAAe;QADa,YAAO,GAAP,OAAO,CAAiB;QAGpD,+CAA+C;QAC/C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC;QAE9C,sBAAsB;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IAEM,mCAAY,GAAnB;QAAA,iBAeC;QAdG,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,iBAAiB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACzD,UAAA,IAAI,IAAM,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,EAClC,UAAA,GAAG,IAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC9B,cAAQ,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAClD,CAAC;QACN,CAAC;QACD,IAAI,CAAC,CAAC;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CACrD,UAAA,IAAI,IAAM,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,EAClC,UAAA,GAAG,IAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAC9B,cAAQ,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAClD,CAAC;QACN,CAAC;IACL,CAAC;IAvCL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,+EAA+E;YAC5F,SAAS,EAAE,CAAC,2EAA2E,CAAC;YACxF,SAAS,EAAE,CAAC,0BAAW,CAAC;SAC3B,CAAC;mBASO,aAAM,CAAC,WAAW,CAAC;;oBAT1B;IAoCF,mBAAC;AAAD,CAnCA,AAmCC,IAAA;AAnCY,oBAAY,eAmCxB,CAAA","file":"webparts/spFxSharePoint/app.component.js","sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { IWebPartContext } from '@microsoft/sp-client-preview';\r\nimport { ListService } from './service.list';\r\nimport { ISPListItem } from './ISPListItem';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n    selector: 'app-main',\r\n    templateUrl: 'https://surfacebook:4321/src/webparts/spFxSharePoint/templates/component.html',\r\n    styleUrls: ['https://surfacebook:4321/src/webparts/spFxSharePoint/templates/fabric.css'],\r\n    providers: [ListService]\r\n})\r\nexport class AppComponent {\r\n\r\n    public webTitle: string; \r\n    private subscription: Subscription;\r\n    private listService: ListService;\r\n    public listItems: ISPListItem[];\r\n\r\n    constructor(\r\n        @Inject('SPContext') public context: IWebPartContext,\r\n        ls: ListService) {\r\n\r\n        //get the web title from the SharePoint context\r\n        this.webTitle = context.pageContext.web.title;\r\n\r\n        //get the list Service\r\n        this.listService = ls;\r\n    }\r\n\r\n    public getListItems() {\r\n        if (this.webTitle === 'Local Workbench') {\r\n            this.subscription = this.listService.getMockItems().subscribe(\r\n                data => { this.listItems = data; },\r\n                err => { console.error(err); },\r\n                () => { console.info('Got mock list items!'); }\r\n            );\r\n        }\r\n        else {\r\n            this.subscription = this.listService.getItems().subscribe(\r\n                data => { this.listItems = data; },\r\n                err => { console.error(err); },\r\n                () => { console.info('Got real list items!'); }\r\n            );\r\n        }\r\n    }\r\n\r\n}"],"sourceRoot":"/src"}