{"version":3,"sources":["webparts/spFxSharePoint/service.list.ts"],"names":[],"mappings":";;;;;;;;;;AACA,0BAAyB,aAAa,CAAC,CAAA;AACvC,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAwC,eAAe,CAAC,CAAA;AACxD,QAAO,uBAAuB,CAAC,CAAA;AAG/B;IAKI,qBAAY,IAAU;QAHd,YAAO,GAAW,oIAAoI,CAAC;QAI3J,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;IAEM,8BAAQ,GAAf;QAEI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YACtC,OAAO,EAAE,IAAI,cAAO,CAChB;gBACI,QAAQ,EAAE,kBAAkB;aAC/B,CACJ;SACJ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAa;YACjB,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;QAC5B,CAAC,CAAC,CAAC;IAEP,CAAC;IAEM,kCAAY,GAAnB;QAAA,iBAIC;QAHG,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC7B,QAAQ,CAAC,IAAI,CAAC,oBAAQ,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IA5BL;QAAC,iBAAU,EAAE;;mBAAA;IA6Bb,kBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BY,mBAAW,cA4BvB,CAAA","file":"webparts/spFxSharePoint/service.list.js","sourcesContent":["import { ISPListItem } from './ISPListItem';\r\nimport { MockList } from './mock.list';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class ListService {\r\n\r\n    private listUrl: string = \"https://a830edad9050849spdk3073.sharepoint.com/sites/appdev/spfx/_api/web/lists/getByTitle('Announcements')/items?$select=Id,Title\";\r\n    private httpService: Http;\r\n\r\n    constructor(http: Http) {\r\n        this.httpService = http;\r\n    }\r\n\r\n    public getItems(): Observable<any> {\r\n\r\n        return this.httpService.get(this.listUrl, {\r\n            headers: new Headers(\r\n                {\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            )\r\n        }).map((res: Response) => {\r\n            return res.json().value;\r\n        });\r\n\r\n    }\r\n\r\n    public getMockItems(): Observable<ISPListItem[]> {\r\n        return Observable.create(observer => {\r\n            observer.next(MockList.get(this.listUrl));\r\n        });\r\n    }\r\n}"],"sourceRoot":"/src"}